name: Security Checks

on:
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Daily vulnerability scan
  vulnerability-scan:
    name: Vulnerability Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level moderate --json > audit-results.json || true

      - name: Check for high/critical vulnerabilities
        run: |
          HIGH_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.high // 0')
          CRITICAL_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.critical // 0')
          echo "High vulnerabilities: $HIGH_VULNS"
          echo "Critical vulnerabilities: $CRITICAL_VULNS"
          if [ "$CRITICAL_VULNS" -gt 0 ] || [ "$HIGH_VULNS" -gt 5 ]; then
            echo "❌ Security threshold exceeded!"
            exit 1
          fi

      - name: Run Semgrep security analysis
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/javascript
            p/typescript
            p/react
            p/nextjs

  # Secret scanning
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # License compliance
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          npx license-checker --production --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD;CC0-1.0;Unlicense' --excludePrivatePackages

  # SAST (Static Application Security Testing)
  sast:
    name: Static Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # Container security scanning
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t corecomm:latest .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'corecomm:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Security policy compliance
  compliance-check:
    name: Security Policy Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check security headers
        run: |
          echo "Checking security configurations..."
          
          # Check if security headers are configured
          if grep -q "X-Frame-Options" next.config.mjs; then
            echo "✅ X-Frame-Options configured"
          else
            echo "❌ X-Frame-Options missing"
            exit 1
          fi
          
          # Check CSRF protection
          if [ -f "lib/csrf-protection.ts" ]; then
            echo "✅ CSRF protection implemented"
          else
            echo "❌ CSRF protection missing"
            exit 1
          fi
          
          # Check rate limiting
          if [ -f "lib/rate-limit.ts" ]; then
            echo "✅ Rate limiting implemented"
          else
            echo "❌ Rate limiting missing"
            exit 1
          fi

      - name: Check environment variable usage
        run: |
          echo "Checking for hardcoded secrets..."
          if grep -r "sk_.*" --include="*.ts" --include="*.js" --include="*.tsx" --include="*.jsx" . || \
             grep -r "pk_.*" --include="*.ts" --include="*.js" --include="*.tsx" --include="*.jsx" . || \
             grep -r "AKIA.*" --include="*.ts" --include="*.js" --include="*.tsx" --include="*.jsx" .; then
            echo "❌ Potential hardcoded secrets found!"
            exit 1
          else
            echo "✅ No obvious hardcoded secrets found"
          fi

  # Generate security report
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [vulnerability-scan, secret-scan, license-check, sast, container-scan, compliance-check]
    if: always()
    steps:
      - name: Generate security summary
        run: |
          echo "# Security Scan Results" > security-report.md
          echo "Date: $(date)" >> security-report.md
          echo "" >> security-report.md
          echo "## Scan Status" >> security-report.md
          echo "- Vulnerability Scan: ${{ needs.vulnerability-scan.result }}" >> security-report.md
          echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> security-report.md
          echo "- License Check: ${{ needs.license-check.result }}" >> security-report.md
          echo "- SAST: ${{ needs.sast.result }}" >> security-report.md
          echo "- Container Scan: ${{ needs.container-scan.result }}" >> security-report.md
          echo "- Compliance: ${{ needs.compliance-check.result }}" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md
          retention-days: 30